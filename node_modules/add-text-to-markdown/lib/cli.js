'use strict';

var _insert = require('./insert');

var _insert2 = _interopRequireDefault(_insert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var meow = require('meow');
var fs = require("fs");
var path = require("path");
var getStdin = require("get-stdin");


var cli = meow('\n    Usage\n      $ echo "text" | add-text-to-markdown path/to/file.md --section "section name"\n\n    Options\n      --section  Markdown section name to insert text\n      -w --write    re-write to file\n\n    Examples\n      $ echo "text" | add-text-to-markdown README.md --section "section"\n      \n      # section\n      text\n', {
    alias: {
        section: 'rainbow',
        w: 'write'
    }
});
/*
 {
 input: ['unicorns'],
 flags: {rainbow: true},
 ...
 }
 */
var markdownFilePath = path.resolve(process.cwd(), cli.input[0]);
if (!markdownFilePath || !cli.flags.section) {
    cli.showHelp();
}
var markdownContent = fs.readFileSync(markdownFilePath, "utf-8");
getStdin().then(function (insertContent) {
    var rewriteContent = (0, _insert2.default)(markdownContent, insertContent, cli.flags.section);
    if (cli.flags.write) {
        fs.writeFileSync(markdownFilePath, rewriteContent, "utf-8");
    } else {
        console.log(rewriteContent);
    }
});
//# sourceMappingURL=cli.js.map